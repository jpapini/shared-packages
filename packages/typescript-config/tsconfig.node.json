{
    "$schema": "https://json.schemastore.org/tsconfig",
    "display": "TypeScript configuration for Node.js",

    "compilerOptions": {
        /* Language and Environment */
        // Set the JavaScript language version for emitted JavaScript and include compatible library declarations.
        "target": "esnext",
        // Specify a set of bundled library declaration files that describe the target runtime environment.
        "lib": ["esnext"],
        // Emit ECMAScript-standard-compliant class fields.
        "useDefineForClassFields": true,

        /* Modules */
        // Specify what module code is generated.
        "module": "esnext",
        // Specify how TypeScript looks up a file from a given module specifier.
        "moduleResolution": "bundler",
        // Use the package.json 'exports' field when resolving package imports.
        "resolvePackageJsonExports": true,
        // Use the package.json 'imports' field when resolving imports.
        "resolvePackageJsonImports": true,
        // Enable importing .json files.
        "resolveJsonModule": true,

        /* JavaScript Support */
        // Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files.
        "allowJs": true,
        // Enable error reporting in type-checked JavaScript files.
        "checkJs": true,

        /* Emit */
        // Disable emitting files from a compilation.
        "noEmit": true,

        /* Interop Constraints */
        // Ensure that each file can be safely transpiled without relying on other imports.
        "isolatedModules": true,
        // Do not transform or elide any imports or exports not marked as type-only, ensuring they are written in the output file's format based on the 'module' setting.
        "verbatimModuleSyntax": true,
        // Allow 'import x from y' when a module doesn't have a default export.
        "allowSyntheticDefaultImports": true,
        // Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility.
        "esModuleInterop": true,
        // Ensure that casing is correct in imports.
        "forceConsistentCasingInFileNames": true,

        /* Type Checking */
        // Enable all strict type-checking options.
        "strict": true,
        // Enable error reporting when local variables aren't read.
        "noUnusedLocals": true,
        // Raise an error when a function parameter isn't read.
        "noUnusedParameters": true,
        // Enable error reporting for codepaths that do not explicitly return in a function.
        "noImplicitReturns": true,
        // Interpret optional property types as written, rather than adding 'undefined'.
        "exactOptionalPropertyTypes": true,
        // Enable error reporting for fallthrough cases in switch statements.
        "noFallthroughCasesInSwitch": true,
        // Add 'undefined' to a type when accessed using an index.
        "noUncheckedIndexedAccess": true,
        // Ensure overriding members in derived classes are marked with an override modifier.
        "noImplicitOverride": true,
        // Enforces using indexed accessors for keys declared using an indexed type.
        "noPropertyAccessFromIndexSignature": true,

        /* Completeness */
        /* Skip type checking all .d.ts files. */
        "skipLibCheck": true
    }
}
